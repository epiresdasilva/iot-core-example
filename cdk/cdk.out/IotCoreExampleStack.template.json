{
 "Resources": {
  "MessagesTable05B58A27": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "N"
     },
     {
      "AttributeName": "status",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "status-timestamp-index",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "timestamp",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "expirationTime",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesTable/Resource"
   }
  },
  "IotRuleRoleEE933CB9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "iot.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/IotRuleRole/Resource"
   }
  },
  "IotRuleRoleDefaultPolicyCCF000B9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MessagesTable05B58A27",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MessagesTable05B58A27",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IotRuleRoleDefaultPolicyCCF000B9",
    "Roles": [
     {
      "Ref": "IotRuleRoleEE933CB9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/IotRuleRole/DefaultPolicy/Resource"
   }
  },
  "ProcessMqttMessages": {
   "Type": "AWS::IoT::TopicRule",
   "Properties": {
    "TopicRulePayload": {
     "Actions": [
      {
       "DynamoDBv2": {
        "PutItem": {
         "TableName": {
          "Ref": "MessagesTable05B58A27"
         }
        },
        "RoleArn": {
         "Fn::GetAtt": [
          "IotRuleRoleEE933CB9",
          "Arn"
         ]
        }
       }
      }
     ],
     "Description": "Processa mensagens MQTT e salva no DynamoDB com timestamp e TTL",
     "Sql": "SELECT *, timestamp() as timestamp, topic() as topic, uuid() as id, timestamp() + 2592000 as expirationTime, 'pending' as status FROM 'devices/data'"
    },
    "RuleName": "process_mqtt_messages"
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/ProcessMqttMessages"
   }
  },
  "GetMessagesFunctionServiceRoleA1070383": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/GetMessagesFunction/ServiceRole/Resource"
   }
  },
  "GetMessagesFunctionServiceRoleDefaultPolicy14208670": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MessagesTable05B58A27",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MessagesTable05B58A27",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetMessagesFunctionServiceRoleDefaultPolicy14208670",
    "Roles": [
     {
      "Ref": "GetMessagesFunctionServiceRoleA1070383"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/GetMessagesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetMessagesFunctionF32AD2AD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7fc97efaa39281c474ccb99735e7467f0a11b6eda0aca9e645a6eec0c1fb26d9.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetMessagesFunctionServiceRoleA1070383",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MessagesTable05B58A27"
      }
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GetMessagesFunctionServiceRoleDefaultPolicy14208670",
    "GetMessagesFunctionServiceRoleA1070383"
   ],
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/GetMessagesFunction/Resource",
    "aws:asset:path": "asset.7fc97efaa39281c474ccb99735e7467f0a11b6eda0aca9e645a6eec0c1fb26d9",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AckMessagesFunctionServiceRoleDDC11D96": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/AckMessagesFunction/ServiceRole/Resource"
   }
  },
  "AckMessagesFunctionServiceRoleDefaultPolicy683DB0B8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MessagesTable05B58A27",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MessagesTable05B58A27",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AckMessagesFunctionServiceRoleDefaultPolicy683DB0B8",
    "Roles": [
     {
      "Ref": "AckMessagesFunctionServiceRoleDDC11D96"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/AckMessagesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AckMessagesFunction489C37A2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fdb9a5924f3b47ab5ec35cd9797b8a8e28179ba1def1d1da14bb37994c4009ae.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AckMessagesFunctionServiceRoleDDC11D96",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MessagesTable05B58A27"
      }
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AckMessagesFunctionServiceRoleDefaultPolicy683DB0B8",
    "AckMessagesFunctionServiceRoleDDC11D96"
   ],
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/AckMessagesFunction/Resource",
    "aws:asset:path": "asset.fdb9a5924f3b47ab5ec35cd9797b8a8e28179ba1def1d1da14bb37994c4009ae",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MessagesApiD42A6416": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API para consultar e confirmar processamento de mensagens MQTT",
    "Name": "Messages Service"
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Resource"
   }
  },
  "MessagesApiDeploymentF8E706CD3ee44a7e16062e5e27ebdc9698853074": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "MessagesApiD42A6416"
    },
    "Description": "API para consultar e confirmar processamento de mensagens MQTT"
   },
   "DependsOn": [
    "MessagesApimessagesackPOST72D0B3D1",
    "MessagesApimessagesack270AEBEB",
    "MessagesApimessagesGETA6054AE5",
    "MessagesApimessagesFE08DADB"
   ],
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Deployment/Resource"
   }
  },
  "MessagesApiDeploymentStageprodB79AE44F": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "MessagesApiD42A6416"
    },
    "DeploymentId": {
     "Ref": "MessagesApiDeploymentF8E706CD3ee44a7e16062e5e27ebdc9698853074"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/DeploymentStage.prod/Resource"
   }
  },
  "MessagesApimessagesFE08DADB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MessagesApiD42A6416",
      "RootResourceId"
     ]
    },
    "PathPart": "messages",
    "RestApiId": {
     "Ref": "MessagesApiD42A6416"
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/Resource"
   }
  },
  "MessagesApimessagesGETApiPermissionIotCoreExampleStackMessagesApi0CE1F62CGETmessagesBF9F56FA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMessagesFunctionF32AD2AD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MessagesApiD42A6416"
       },
       "/",
       {
        "Ref": "MessagesApiDeploymentStageprodB79AE44F"
       },
       "/GET/messages"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/GET/ApiPermission.IotCoreExampleStackMessagesApi0CE1F62C.GET..messages"
   }
  },
  "MessagesApimessagesGETApiPermissionTestIotCoreExampleStackMessagesApi0CE1F62CGETmessages5C1A33FC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMessagesFunctionF32AD2AD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MessagesApiD42A6416"
       },
       "/test-invoke-stage/GET/messages"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/GET/ApiPermission.Test.IotCoreExampleStackMessagesApi0CE1F62C.GET..messages"
   }
  },
  "MessagesApimessagesGETA6054AE5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "MessagesApimessagesFE08DADB"
    },
    "RestApiId": {
     "Ref": "MessagesApiD42A6416"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetMessagesFunctionF32AD2AD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/GET/Resource"
   }
  },
  "MessagesApimessagesack270AEBEB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "MessagesApimessagesFE08DADB"
    },
    "PathPart": "ack",
    "RestApiId": {
     "Ref": "MessagesApiD42A6416"
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/ack/Resource"
   }
  },
  "MessagesApimessagesackPOSTApiPermissionIotCoreExampleStackMessagesApi0CE1F62CPOSTmessagesack8EF50B30": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AckMessagesFunction489C37A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MessagesApiD42A6416"
       },
       "/",
       {
        "Ref": "MessagesApiDeploymentStageprodB79AE44F"
       },
       "/POST/messages/ack"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/ack/POST/ApiPermission.IotCoreExampleStackMessagesApi0CE1F62C.POST..messages.ack"
   }
  },
  "MessagesApimessagesackPOSTApiPermissionTestIotCoreExampleStackMessagesApi0CE1F62CPOSTmessagesack715E0E80": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AckMessagesFunction489C37A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MessagesApiD42A6416"
       },
       "/test-invoke-stage/POST/messages/ack"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/ack/POST/ApiPermission.Test.IotCoreExampleStackMessagesApi0CE1F62C.POST..messages.ack"
   }
  },
  "MessagesApimessagesackPOST72D0B3D1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "MessagesApimessagesack270AEBEB"
    },
    "RestApiId": {
     "Ref": "MessagesApiD42A6416"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AckMessagesFunction489C37A2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/MessagesApi/Default/messages/ack/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPQW/CMAyFfwv34BW4cIVOu01DZXfkJoaZtkmFnaGq6n+fkjKNnd73LPvpeQ3bAooF3mVpXbNsuYbxqGgbg3c5jW7w2AVXw/iJdUumPPsMk2HsYKzCPMt6CC3bIdmZJsNBIV2Enm0VWzItdrVDGN+it8rBp+VnPtCtYxEOfjKyOaEIqcAuiZEN7KNtSPcoZLDnCyrdcYCxItFdz7nIA1+pb8PQkdc0fXJHxUuuPENFEuLNUs78NY+gmd9Jv4JLo5mm6W8vF0tB7C9p4yNqH/XfeXn2ZfCONf/kgyO4ysv3uoDVFlaLqzAvb9ErdwTVrD/uhPS2kwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "IotCoreExampleStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "MessagesApiEndpoint4EEB6F84": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MessagesApiD42A6416"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MessagesApiDeploymentStageprodB79AE44F"
      },
      "/"
     ]
    ]
   }
  },
  "TableName": {
   "Description": "Nome da tabela DynamoDB",
   "Value": {
    "Ref": "MessagesTable05B58A27"
   }
  },
  "ApiEndpoint": {
   "Description": "URL da API para consultar e confirmar mensagens",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MessagesApiD42A6416"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MessagesApiDeploymentStageprodB79AE44F"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}